package frontend;

import backend.lexico.Lexer;
import backend.sintactico.Parser;
import frontend.graficas.PanelDibujo;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.StringReader;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyledDocument;

/**
 *
 * @author michael
 */
public class EditorPanel extends javax.swing.JPanel {

    private NumeroLinea numerarEditor;

    /**
     * Creates new form PruebaEditor
     */
    public EditorPanel() {
        initComponents();
        mostrarColumnaLabel.setText("Columna: 1");
        numerarEditor = new NumeroLinea(areaEditor);
        scrollEditor.setRowHeaderView(numerarEditor);
        areaEditor.setBackground(Color.LIGHT_GRAY);
        mostrarColumna();
        this.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_F5) {
                    ejecutarAnalisisLexico();
                }
            }
        });
        this.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_F4) {
                    limpiarTodo();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mostrarColumnaLabel = new javax.swing.JLabel();
        limpiarBoton = new javax.swing.JButton();
        ejecutarBoton = new javax.swing.JButton();
        scrollEditor = new javax.swing.JScrollPane();
        areaEditor = new javax.swing.JTextPane();

        setBackground(new java.awt.Color(255, 255, 0));
        setPreferredSize(new java.awt.Dimension(844, 590));
        setLayout(new java.awt.GridBagLayout());

        mostrarColumnaLabel.setFont(new java.awt.Font("MesloLGL Nerd Font", 0, 13)); // NOI18N
        mostrarColumnaLabel.setForeground(new java.awt.Color(0, 0, 0));
        mostrarColumnaLabel.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 423, 0, 0);
        add(mostrarColumnaLabel, gridBagConstraints);

        limpiarBoton.setBackground(new java.awt.Color(0, 153, 255));
        limpiarBoton.setFont(new java.awt.Font("MesloLGL Nerd Font", 0, 13)); // NOI18N
        limpiarBoton.setForeground(new java.awt.Color(255, 255, 255));
        limpiarBoton.setText("Limpiar Editor");
        limpiarBoton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        limpiarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarBotonActionPerformed(evt);
            }
        });
        limpiarBoton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                limpiarBotonKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 101, 7, 0);
        add(limpiarBoton, gridBagConstraints);

        ejecutarBoton.setBackground(new java.awt.Color(51, 255, 51));
        ejecutarBoton.setFont(new java.awt.Font("MesloLGL Nerd Font", 1, 13)); // NOI18N
        ejecutarBoton.setForeground(new java.awt.Color(0, 0, 0));
        ejecutarBoton.setText("Ejecutar");
        ejecutarBoton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ejecutarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarBotonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 29;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 68, 1, 0);
        add(ejecutarBoton, gridBagConstraints);

        scrollEditor.setViewportView(areaEditor);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 858;
        gridBagConstraints.ipady = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 32, 20, 32);
        add(scrollEditor, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void ejecutarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarBotonActionPerformed
        String mensajeError = "Excepcipon en ejecutar";
        if (areaEditor.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(this, "No hay nada por analizar.\nPor favor escriba algo en el editor de texto", "Editor vacÃ­o", JOptionPane.INFORMATION_MESSAGE);
            JFrame ventanaDibujos = new JFrame("Dibujos");
            PanelDibujo panelDibujo = new PanelDibujo();
            ventanaDibujos.add(panelDibujo);
            ventanaDibujos.setSize(1200, 600);
            ventanaDibujos.setLocationRelativeTo(this);
            ventanaDibujos.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            ventanaDibujos.setVisible(true);
        } else {
            Parser parser = null;
            try {
                Lexer lexer = new Lexer(new StringReader(areaEditor.getText()));
                parser = new Parser(lexer);
                parser.parse();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_ejecutarBotonActionPerformed

    private void limpiarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarBotonActionPerformed
        areaEditor.setText("");
        StyledDocument doc = areaEditor.getStyledDocument();
        doc.setCharacterAttributes(0, doc.getLength(), new SimpleAttributeSet(), true);
    }//GEN-LAST:event_limpiarBotonActionPerformed

    private void limpiarBotonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_limpiarBotonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F4) {
            limpiarTodo();
        }
    }//GEN-LAST:event_limpiarBotonKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane areaEditor;
    private javax.swing.JButton ejecutarBoton;
    private javax.swing.JButton limpiarBoton;
    private javax.swing.JLabel mostrarColumnaLabel;
    private javax.swing.JScrollPane scrollEditor;
    // End of variables declaration//GEN-END:variables

    public void ejecutarAnalisisLexico() {
    /*    if (listaToken != null) {
            listaToken.clear();
        }
        if (!areaConsola.getText().isEmpty()) {
            //new AnalizadorLexico(listaToken).generarLexer();
        }*/
        //ColorearEditor.colorPalabras(areaEditor.getStyledDocument(), areaEditor.getText(), listaToken);

    }

    private void ejecutarAnalisisSintactico() {


    }

    public void limpiarTodo() {
        areaEditor.setText("");
    }

    private void mostrarColumna() {
        areaEditor.addCaretListener(e -> {
            int caretPosition = areaEditor.getCaretPosition();
            int linea = 0;
            try {
                linea = areaEditor.getDocument().getDefaultRootElement().getElementIndex(caretPosition);
            } catch (Exception ex) {
                ex.printStackTrace();
            }

            int columna = 0;
            try {
                int inicioLinea = areaEditor.getDocument().getDefaultRootElement().getElement(linea).getStartOffset();
                columna = caretPosition - inicioLinea;
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            mostrarColumnaLabel.setText("Columna: " + (columna + 1));
        });
    }

    public void setAreaEditor(String textoLeido) {
        areaEditor.setText(textoLeido);
    }
}
